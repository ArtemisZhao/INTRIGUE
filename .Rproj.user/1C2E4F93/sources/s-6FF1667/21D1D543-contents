#' Heterogeneity Evaluation
#'
#' Evaluating the overall and individually heterogeneity and reproducibility
#' for the given individuals(units) shared in different replicates.
#'
#' @param data A dataset which is constructed by pairs of coefficient
#' values \eqn{ \beta } and standard errors \eqn{ se(\beta)}.
#' @param krep A vector, denoting all the k values constructing the reproducible signals. If not specified,
#' the default one is c(0.01,0.462,0.513,0.618), which corresponds to the several prior values satisfy that
#' \eqn{Pr(\beta_{i,1}, \beta_{i,2} have a same sign)\ge 0.90.}
#' @param kirep  A vector, denoting all the k values constructing the irreproducible signals.If not specified,
#' the default one is c(2.0,10.0), which corresponds to the several prior values satisfy that
#' \eqn{Pr(\beta_{i,1}, \beta_{i,2} have a same sign)=0.57,0.5.}
#' @param oa A vector, denoting all the \eqn{\omega} values to be set on the grid. If not specified, \eqn{\omega} grid will
#' be generated by a dynamic procedure, which is determined by the data structure, namely,
#' \eqn{min(\omega)=min(se(\beta)/2)}, \eqn{max(\omega)=max(\sqrt{\beta^2-se(\beta)^2})}.
#' @param sq_em_tol A small, positive scalar that determines when iterations should be terminated in squarem algorithm.
#' The default value is \eqn{1e-7}.
#'
#' @return
#'
#' A list with the following components:
#' \describe{
#' \item{gridweight}{ The final optimal weight vector evaluated on each grid point.}
#' \item{ind_prob}{ A matrix denoting the converged probability for each individual being inside the
#' three different groups, namely, the null, the reproducible and the irreproducible group.}
#' \item{est_prop}{ The estimated proportion value for the three different groups, namely, the null,
#' the reproducible and the irreproducible group.}
#' }
#' @import SQUAREM
#' @export
#'
#' @examples
#' data("heterodata")
#' hetero.out<-hetero(heterodata)
#' names(hetero.out)
#' print(hetero.out$est_prop)
#'
hetero<-function(data,krep=NULL,kirep=NULL,oa=NULL,sq_em_tol=1e-7){
### Hyperparam- Grid set up
if (is.null(krep)) {
  krep=c(0.01,0.462,0.513,0.618)
}
if (is.null(kirep)){
  kirep<-c(2.0,10.0)
}

kk<-c(krep,kirep)

if (is.null(oa)){
 minoa<-min(data[,2])/2
 maxoa<-sqrt(max(data[,1]^2-data[,2]^2))
 oalist<-maxoa
 med<-maxoa/1.5

 while (med>minoa){
   oalist<-c(oalist,med)
   med<-med/1.5
 }
 oa<-oalist
}

hyperparam<-expand.grid(k=kk,oa=oa)

### Bayes Factor Calculation
bf<-bf.cal(data,hyperparam)

### EM Procedure
#### Package SQUAREM is used
K<-nrow(hyperparam)+1
n<-nrow(data)
w0<-runif(K)
w0<-w0/sum(w0)

bf.result<-fpiter(w0,bf,fixptfn=bf.em,objfn=bf.loglik,control=list(tol=sq_em_tol))

wfinal<-bf.result$par

### gridweight
gridweight<-cbind(rbind(c(0,0),hyperparam),wfinal)

hetero.res<-list(3)
hetero.res[[1]]<-gridweight

cutoff<-krep[length(krep)]
eifinal<-matrix(NA,n,K)
catfinal<-matrix(NA,n,3)
portion<-rep(NA,3)

### Individual level probability
for (i in 1:n){
  eifinal[i,]<-wfinal*bf[((i-1)*K+1):(i*K)]/sum(wfinal*bf[((i-1)*K+1):(i*K)])
  catfinal[i,1]<-eifinal[i,1] #null
  #reproducible
  catfinal[i,2]<-sum(eifinal[i,which(gridweight[,1]<=cutoff)])-eifinal[i,1]
  #irreproducible
  catfinal[i,3]<-sum(eifinal[i,which(gridweight[,1]>cutoff)])
}

hetero.res[[2]]<-catfinal

### Overall proportion
portion[1]<-gridweight[1,3]#null
#reproducible
portion[2]<-sum(gridweight[which(gridweight[,1]<=cutoff),3])-gridweight[1,3]
#irreproducible
portion[3]<-sum(gridweight[which(gridweight[,1]>cutoff),3])

hetero.res[[3]]<-portion

names(hetero.res)<-c("gridweight","ind_prob","est_prop")

return(hetero.res)
}
